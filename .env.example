# Google Messages App - Environment Variables Example
# Copy this file to .env and fill in your actual values
# DO NOT commit .env file to version control

# =============================================================================
# APPLE CODE SIGNING (macOS Distribution)
# =============================================================================

# Apple Developer Account Credentials
# Required for notarization of macOS builds
APPLE_ID=your-apple-id@example.com
APPLE_ID_PASS=your-app-specific-password-here

# Apple Developer Team ID
# Found in Apple Developer Console under Membership
TEAM_ID=ABCD123456

# Apple Certificate Data (Base64 encoded)
# Export your Developer ID Application certificate as .p12
# Then base64 encode it: base64 -i certificate.p12 -o certificate.b64
APPLE_CERT_DATA=base64-encoded-certificate-data-here

# Apple Certificate Password
# Password used when exporting the .p12 certificate
APPLE_CERT_PASSWORD=your-certificate-password-here

# Keychain Password for CI/CD
# Used to create temporary keychain during build process
KEYCHAIN_PASSWORD=temporary-keychain-password-for-ci

# =============================================================================
# WINDOWS CODE SIGNING
# =============================================================================

# Windows Code Signing Certificate (Base64 encoded .p12 file)
# Export your code signing certificate and encode it:
# base64 -i certificate.p12 -o certificate.b64
WIN_CSC_LINK=base64-encoded-windows-certificate-data-here

# Windows Certificate Password
WIN_CSC_KEY_PASSWORD=your-windows-certificate-password-here

# =============================================================================
# GITHUB INTEGRATION
# =============================================================================

# GitHub Personal Access Token
# Required for creating releases and uploading assets
# Needs: repo, write:packages permissions
GITHUB_TOKEN=ghp_your-github-personal-access-token-here

# GitHub Token for Homebrew Updates
# Separate token for updating Homebrew tap repository
# Needs: repo permissions for your homebrew tap repo
HOMEBREW_GITHUB_API_TOKEN=ghp_your-homebrew-token-here

# =============================================================================
# PACKAGE REPOSITORY HOSTING
# =============================================================================

# APT Repository Configuration
# Domain where your APT repository will be hosted
APT_REPO_DOMAIN=your-username.github.io
APT_REPO_PATH=/google-messages-app/apt

# GPG Key for Debian Package Signing
# Generate with: gpg --gen-key
# Export with: gpg --armor --export-secret-keys YOUR_KEY_ID
GPG_PRIVATE_KEY=-----BEGIN PGP PRIVATE KEY BLOCK-----\nyour-gpg-private-key-here\n-----END PGP PRIVATE KEY BLOCK-----
GPG_PASSPHRASE=your-gpg-key-passphrase

# =============================================================================
# CHOCOLATEY PACKAGE MANAGER
# =============================================================================

# Chocolatey API Key
# Get from: https://chocolatey.org/account
CHOCOLATEY_API_KEY=your-chocolatey-api-key-here

# =============================================================================
# NOTIFICATION SERVICES
# =============================================================================

# Slack Webhook (Optional - for build notifications)
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# Discord Webhook (Optional - for build notifications)  
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR/DISCORD/WEBHOOK

# =============================================================================
# ANALYTICS & MONITORING (Optional)
# =============================================================================

# Sentry DSN for Error Tracking
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# Google Analytics Measurement ID
GA_MEASUREMENT_ID=G-XXXXXXXXXX

# =============================================================================
# BUILD CONFIGURATION
# =============================================================================

# Build Environment
NODE_ENV=production

# Application Version Override
# If set, overrides version from package.json
APP_VERSION=1.0.0

# Build Number (for CI/CD)
# Usually set by CI system (GitHub Actions sets GITHUB_RUN_NUMBER)
BUILD_NUMBER=1

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable Development Tools in Production Build
ENABLE_DEV_TOOLS=false

# Auto-updater URL Override
# If you're hosting your own update server
AUTO_UPDATER_URL=https://your-domain.com/updates

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# Content Security Policy Override
# Only modify if you know what you're doing
CSP_OVERRIDE=default-src 'self' https://messages.google.com

# =============================================================================
# GITHUB ACTIONS SECRETS REFERENCE
# =============================================================================
# The following environment variables should be set as GitHub Secrets:
# 
# Repository Secrets (Settings > Secrets and variables > Actions):
# - APPLE_ID
# - APPLE_ID_PASS  
# - TEAM_ID
# - APPLE_CERT_DATA
# - APPLE_CERT_PASSWORD
# - KEYCHAIN_PASSWORD
# - WIN_CSC_LINK
# - WIN_CSC_KEY_PASSWORD
# - HOMEBREW_GITHUB_API_TOKEN
# - GPG_PRIVATE_KEY
# - GPG_PASSPHRASE
# - CHOCOLATEY_API_KEY
# - SLACK_WEBHOOK_URL (optional)
# - DISCORD_WEBHOOK_URL (optional)
# - SENTRY_DSN (optional)
#
# Built-in GitHub Secrets (automatically available):
# - GITHUB_TOKEN (automatically provided by GitHub Actions)
# - GITHUB_RUN_NUMBER (build number)
# - GITHUB_SHA (commit hash)
# - GITHUB_REF (branch/tag reference)

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# 1. APPLE DEVELOPER SETUP:
#    - Sign up for Apple Developer Program ($99/year)
#    - Create Developer ID Application certificate
#    - Generate App-Specific Password for Apple ID
#    - Export certificate as .p12 and base64 encode it

# 2. WINDOWS CODE SIGNING:
#    - Purchase code signing certificate from trusted CA
#    - Export as .p12 file and base64 encode it
#    - Consider Extended Validation (EV) certificate for better trust

# 3. GITHUB SETUP:
#    - Create Personal Access Token with repo permissions
#    - Add all secrets to GitHub repository settings
#    - Test the build workflow with a test tag

# 4. PACKAGE MANAGERS:
#    - Set up accounts on Chocolatey.org
#    - Submit packages to respective stores
#    - Configure auto-update mechanisms

# 5. OPTIONAL SERVICES:
#    - Set up error tracking (Sentry)
#    - Configure build notifications (Slack/Discord)
#    - Set up analytics if desired